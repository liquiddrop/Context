apply plugin: 'com.android.application'

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.curtis.context"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    flavorDimensions "ads_mode"
    productFlavors {
        free {
            applicationId "com.curtis.context.free"
            versionName "1.0-free"
            // this boolean can be accessed in java classes by using BuildConfig class
            // and now you can identify if your app is the paid version or not
            buildConfigField("boolean", "FREE_VERSION", "true")
            dimension 'ads_mode'
        }

        paid {
            applicationId "com.curtis.context.paid"
            versionName "1.0-paid"
            buildConfigField("boolean", "FREE_VERSION", "false")
            dimension 'ads_mode'
        }
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

    // used by Room, to test migrations
    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    //ads stuff
    implementation 'com.google.firebase:firebase-ads:18.3.0'
    //other stuff from room example
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Room components
    implementation 'androidx.room:room-runtime:2.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'
    androidTestImplementation 'androidx.room:room-testing:2.0.0'
    // Lifecycle components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.github.daolq3012:AssetSQLiteOpenHelper:1.0'
    // Because AssetSQLiteOpenHelper releases are few and far between (persistence room version using in module is 1.0.0),
    // it is recommended you also explicitly depend on Persistence Room's latest version for bug fixes and new features.
    //Bring in a timeline lib
    implementation 'com.github.vipulasri:timelineview:1.0.6'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    apply plugin: 'com.google.gms.google-services'
}
